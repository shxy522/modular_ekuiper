name: Build packages

concurrency:
  group: build-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

on:
  pull_request:
  push:
    tags:
      - "*"

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      arch: ${{ steps.arch.outputs.arch }}
    steps:
      - id: arch
        run: |
          if ${{ github.ref_type == 'tag' }}; then
            echo "arch=[\"amd64\", \"arm64\"]" >> $GITHUB_OUTPUT
          else
            echo "arch=[\"amd64\"]" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-24.04
    needs: prepare

    strategy:
      matrix:
        arch: ${{fromJSON(needs.prepare.outputs.arch)}}
        golang:
          - 1.20.2
        pkg:
          - pkg_core
          - pkg_without_edgex

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v9.2.2-52
    - uses: docker/setup-buildx-action@v3
    - name: build binary packages
      run: |
        docker run -i --rm \
        -v $(pwd):/ekuiper \
        --workdir /ekuiper \
        --env KUIPER_SOURCE='/ekuiper' \
        --platform linux/${{ matrix.arch }} \
        ghcr.io/lf-edge/ekuiper/base:${{ matrix.golang }}-debian \
        bash -euc "git config --global --add safe.directory /ekuiper && make ${{ matrix.pkg }}"
    - name: create sha file
      run: |
        cd _packages && for var in $(ls); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
    - name: Set artifact name
      id: artifact_name
      env:
        ARCH: ${{ matrix.arch }}
        REF: ${{ github.ref_name }}
        PKG:  ${{ matrix.pkg }}
      run: |
        arch=$(echo $ARCH | sed -r 's|linux/([a-z]*)(/.*)*|\1|g')
        ref=$(echo ${REF/\//-})
        artifact_name="kuiper-${ref}-${{ matrix.os }}-${arch}-${PKG}"
        echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact_name.outputs.artifact_name }}
        path: _packages/

  docker:
    runs-on: ubuntu-24.04
    needs: prepare

    strategy:
      matrix:
        arch: ${{fromJSON(needs.prepare.outputs.arch)}}
        golang:
          - 1.20.2

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v9.2.2-52
    - uses: docker/setup-buildx-action@v3
    - name: build docker images
      run: |
        mkdir -p _packages
        export TAG=$(git describe --tags --always)
        export PKG=kuiper-crrc-${TAG}-linux-${{ matrix.arch }}
        sudo docker buildx build --platform linux/${{ matrix.arch }} -t emqx/ekuiper:${TAG} -f deploy/docker/Dockerfile-slim-python .
        sudo docker save -o _packages/${PKG}-docker.tar emqx/ekuiper:${TAG}
        sudo chmod 644 _packages/*
    - name: create sha file
      run: |
        cd _packages && for var in $(ls); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
    - name: Set artifact name
      id: artifact_name
      env:
        ARCH: ${{ matrix.arch }}
        REF: ${{ github.ref_name }}
      run: |
        arch=$(echo $ARCH | sed -r 's|linux/([a-z]*)(/.*)*|\1|g')
        ref=$(echo ${REF/\//-})
        artifact_name="kuiper-${ref}-${{ matrix.os }}-${arch}"
        echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact_name.outputs.artifact_name }}
        path: _packages/

  release:
    runs-on: ubuntu-24.04

    needs:
    - build
    - docker

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        pattern: kuiper-*
        path: _packages
        merge-multiple: true
    - uses: actions/download-artifact@v4
      with:
        pattern: plugin-*
        path: _plugins
        merge-multiple: true
    - name: check packages
      run: |
        cd _packages && for var in $( ls |grep -v sha256); do
          echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
        done
    - id: prerelease
      run: |
        if echo "${{ github.ref_name }}" |egrep -q "^[0-9].[0-9].[0-9]$"; then
          echo "prerelease=false" >> $GITHUB_OUTPUT
        else
          echo "prerelease=true" >> $GITHUB_OUTPUT
        fi
    - uses: softprops/action-gh-release@v1
      if: github.ref_type == 'tag'
      with:
        ## When you use the repository's GITHUB_TOKEN to perform tasks,
        ## events triggered by the GITHUB_TOKEN, with the exception of workflow_dispatch and repository_dispatch,
        ## will not create a new workflow run.
        ## This prevents you from accidentally creating recursive workflow runs.
        ## More info: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
        token: ${{ github.token }}
        prerelease: ${{ steps.prerelease.outputs.prerelease }}
        generate_release_notes: true
        name: modular_ekuiper ${{ github.ref_name }} Released
        body: |
          modular_ekuiper ${{ github.ref_name }} has been released.
        files: |
          _packages/kuiper-*
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: "*"
